= render "items/pcHeader"
- breadcrumb :items_new
= render "layouts/breadcrumbs"
.ItemNew__Box

  .ItemNew__Header

    .Logo-Box
      = link_to root_path do
        = image_tag 'logo.png', height: '36', width: '134' 

  .ItemNew-Maim

    .ItemNew-Center
      = form_with(model: @item, local: true) do |f|

        - if @item.errors.any?
          .alert.alert-warning
            %ul
              - @item.errors.full_messages.each do |message|
                %li= message

        .ItemEntry
          %h.ItemEntry__text 商品画像
          %span.ItemEntry__require 必須
          %br
          最大5枚までアップロードできます

        .ItemNew-Img
          #image-box
            #previews
              - if @item.persisted?
                - @item.images.each_with_index do |image, i|
                  = image_tag image.src.url, data: { index: i }, width: "100", height: '100'
                .js-remove

        .ItemNew-Select
          .sellBtn2
            = fa_icon 'camera'

        #file-fields
          = f.fields_for :images do |image|
            .js-file_group{"data-index" => "#{image.index}"}
              = image.file_field :src, class: 'js-file'
              %br
              /*%span.js-remove 削除*/
            - if @item.persisted?
              = image.check_box :_destroy, data:{ index: image.index }, class: 'hidden-destroy'
          - if @item.persisted?
            .js-file_group{"data-index" => "#{@item.images.count}"}
              = file_field_tag :src, name: "item[images_attributes][#{@item.images.count}][src]", class: 'js-file'
            /*.js-remove 削除*/
            /*=link_to '削除', item_path(item), method: :delete*/  /実装予定

        .ItemEntry
          %h.ItemEntry__text 商品名
          %span.ItemEntry__require 必須
        = f.text_field :name, {placeholder: '入力してください', class:'ItemNew-name'}    # , required: "required" の採用を無しにした

        .ItemEntry
          %h.ItemEntry__text 商品の説明
          %span.ItemEntry__require 必須
        = f.text_field :introduction, {placeholder: '商品の説明 (色、素材、重さ、定価など)', class:'ItemNew-introduction'}

        .p 商品の詳細

        .ItemEntry
          .sell-container__content
            .sell-container__content__details
              .sell-title
                %h3.sell-title__text
                  カテゴリー
                  %span.sell-title__require
                    必須
              .sell-collection_select
                = f.label :category_id, {class: 'sell-collection_select__label'} do
                  = f.collection_select :category_id, Category.roots, :id, :name, {include_blank: "選択して下さい", selected: @item&.category&.root&.id},{class: 'sell-collection_select__input', id: 'category-select-parent'}
                  
                - if @item.category.present?
                  = f.collection_select :category_id, @item.category.parent.siblings, :id, :name, {include_blank: "選択して下さい", selected: @item&.category&.parent&.id},{class: 'sell-collection_select__input', id: 'category-select-children'}
                  = f.collection_select :category_id, @item.category.siblings, :id, :name, {include_blank: "選択して下さい", selected: @item&.category&.id},{ class: 'sell-collection_select__input', id: 'category-select-grandchildren'}

              .error-messages#error-category

        .ItemEntry
          %h.ItemEntry__text ブランド
          %span.ItemEntry__option 任意
        = f.text_field :brand, {placeholder: '入力してください', class:'ItemNew-Brand'}

        .ItemEntry
          %h.ItemEntry__text 商品の状態
          %span.ItemEntry__require 必須
        = f.collection_select :item_condition_id, ItemCondition.all, :id, :name,{prompt: "選択してください"},{class: 'input'}
        .error-messages#error-category

        .p 発送について

        .ItemEntry
          %h.ItemEntry__text 配送料の負担
          %span.ItemEntry__require 必須
        = f.collection_select :postage_payer_id, PostagePayer.all, :id, :name,{prompt: "選択して下さい"},{ class: 'input'}

        .ItemEntry
          %h.ItemEntry__text 発送元の地域
          %span.ItemEntry__require 必須
        = f.collection_select :prefecture_code_id, PrefectureCode.all, :id, :name,{prompt: "選択してください"},{class: 'input'}
        
        .ItemEntry
          %h.ItemEntry__text 発送までの日数
          %span.ItemEntry__require 必須
        = f.collection_select :preparation_day_id, PreparationDay.all, :id, :name,{prompt: "選択してください"},{class: 'input'}

        .p 価格(¥300 ~ ¥9,999,999)
        .ItemEntry-price
          %h.ItemEntry__text 販売価格
          %span.ItemEntry__require 必須
        ¥
        = f.text_field :price, {placeholder: '¥300 ~ ¥9,999,999', class:'ItemNew-price'}
        
        .actions
          = f.submit '出品する', class: 'Submit-btn'

        .Return-btn
          = link_to 'もどる', root_path, class: 'Return-btn'
